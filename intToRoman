#Grishma Patel
#Greedy approach
#complexity o(1) since digits has finite sets

class Solution:
    def intToRoman(self, num: int) -> str:
        digits = [(1000, "M"), (900, "CM"), (500, "D"), (400, "CD"), (100, "C"), 
                  (90, "XC"), (50, "L"), (40, "XL"), (10, "X"), (9, "IX"), 
                  (5, "V"), (4, "IV"), (1, "I")]
        
        list_result = []
        for ival,iroman in digits:
            if num == 0: break
                
            quotient, num = divmod(num, ival) #if num/ival is near 1.x or not
            print(quotient,num)
            
            list_result.append(iroman*quotient)
            
        return "".join(list_result)
        
        
